DEBUG=0

ifeq ($(platform),)
platform = unix
ifeq ($(shell uname -a),)
   platform = win
else ifneq ($(findstring MINGW,$(shell uname -a)),)
   platform = win
else ifneq ($(findstring Darwin,$(shell uname -a)),)
   platform = osx
else ifneq ($(findstring win,$(shell uname -a)),)
   platform = win
endif
endif

TARGET_NAME := dosbox

# system platform
system_platform = unix
ifeq ($(shell uname -a),)
EXE_EXT = .exe
   system_platform = win
else ifneq ($(findstring Darwin,$(shell uname -a)),)
   system_platform = osx
else ifneq ($(findstring MINGW,$(shell uname -a)),)
   system_platform = win
endif

ifeq ($(platform), unix)
   TARGET := $(TARGET_NAME)_libretro.so
   LDFLAGS += -shared -Wl,--version-script=libretro/link.T
   
   fpic = -fPIC
else ifeq ($(platform), osx)
   TARGET := $(TARGET_NAME)_libretro.dylib
   LDFLAGS += -dynamiclib
   
   fpic = -fPIC
else ifeq ($(platform), ios)
   TARGET := $(TARGET_NAME)_libretro_ios.dylib
   CPPFLAGS += -DCOTHREAD_PTHREAD
   LDFLAGS += -dynamiclib
   fpic = -fPIC

   CC = clang -arch armv7 -isysroot $(IOSSDK)
   CXX = clang++ -arch armv7 -isysroot $(IOSSDK)
else ifeq ($(platform), android)
   TARGET := $(TARGET_NAME)_libretro.so
   CXXFLAGS += -fpermissive 
   LDFLAGS += -shared -Wl,--version-script=libretro/link.T

   CC = arm-linux-androideabi-gcc
   CXX = arm-linux-androideabi-g++
   
   fpic = -fPIC
else ifeq ($(platform), psp1)
   TARGET := $(TARGET_NAME)_libretro_psp1.a
   CC = psp-gcc$(EXE_EXT)
   CXX = psp-g++$(EXE_EXT)
   AR = psp-ar$(EXE_EXT)
   CPPFLAGS += -DPSP -G0
	STATIC_LINKING = 1
else ifeq ($(platform), wii)
   TARGET := $(TARGET_NAME)_libretro_wii.a
   CC = $(DEVKITPPC)/bin/powerpc-eabi-gcc$(EXE_EXT)
   CXX = $(DEVKITPPC)/bin/powerpc-eabi-g++$(EXE_EXT)
   AR = $(DEVKITPPC)/bin/powerpc-eabi-ar$(EXE_EXT)
   CPPFLAGS += -DGEKKO -mrvl -mcpu=750 -meabi -mhard-float -D__POWERPC__ -D__ppc__ -DWORDS_BIGENDIAN=1
	STATIC_LINKING = 1
else
   TARGET := $(TARGET_NAME)_libretro.dll
   LDFLAGS += -shared -static-libgcc -static-libstdc++ -Wl,--version-script=libretro/link.T -lwinmm
endif

ifeq ($(DEBUG), 1)
CPPFLAGS += -O0 -g
else
CPPFLAGS += -O3
endif


SOURCES = \
    src/cpu/callback.cpp \
    src/cpu/cpu.cpp \
    src/cpu/flags.cpp \
    src/cpu/modrm.cpp \
    src/cpu/core_full.cpp \
	src/cpu/paging.cpp \
	src/cpu/core_normal.cpp \
	src/cpu/core_simple.cpp \
	src/cpu/core_prefetch.cpp \
	src/cpu/core_dyn_x86.cpp \
	src/cpu/core_dynrec.cpp \
	src/dos/dos.cpp \
	src/dos/dos_devices.cpp \
	src/dos/dos_execute.cpp \
	src/dos/dos_files.cpp \
	src/dos/dos_ioctl.cpp \
	src/dos/dos_memory.cpp \
    src/dos/dos_misc.cpp \
    src/dos/dos_classes.cpp \
    src/dos/dos_programs.cpp \
    src/dos/dos_tables.cpp \
	src/dos/drives.cpp \
	src/dos/drive_virtual.cpp \
	src/dos/drive_local.cpp \
	src/dos/drive_cache.cpp \
	src/dos/drive_fat.cpp \
	src/dos/drive_iso.cpp \
	src/dos/dos_mscdex.cpp \
	src/dos/dos_keyboard_layout.cpp \
	src/dos/cdrom.cpp \
	src/dos/cdrom_image.cpp \
    src/fpu/fpu.cpp \
    src/hardware/adlib.cpp \
    src/hardware/dma.cpp \
    src/hardware/gameblaster.cpp \
    src/hardware/hardware.cpp \
    src/hardware/iohandler.cpp \
    src/hardware/joystick.cpp \
    src/hardware/keyboard.cpp \
    src/hardware/memory.cpp \
    src/hardware/pcspeaker.cpp \
    src/hardware/pci_bus.cpp \
    src/hardware/pic.cpp \
    src/hardware/sblaster.cpp \
    src/hardware/tandy_sound.cpp \
    src/hardware/timer.cpp \
    src/hardware/vga.cpp \
	src/hardware/vga_attr.cpp \
	src/hardware/vga_crtc.cpp \
	src/hardware/vga_dac.cpp \
	src/hardware/vga_draw.cpp \
	src/hardware/vga_gfx.cpp \
	src/hardware/vga_other.cpp \
	src/hardware/vga_memory.cpp \
	src/hardware/vga_misc.cpp \
	src/hardware/vga_seq.cpp \
	src/hardware/vga_xga.cpp \
	src/hardware/vga_s3.cpp \
	src/hardware/vga_tseng.cpp \
	src/hardware/vga_paradise.cpp \
	src/hardware/cmos.cpp \
	src/hardware/disney.cpp \
	src/hardware/gus.cpp \
	src/hardware/mpu401.cpp \
	src/hardware/ipx.cpp \
	src/hardware/ipxserver.cpp \
	src/hardware/dbopl.cpp \
	src/ints/mouse.cpp \
	src/ints/xms.cpp \
	src/ints/ems.cpp \
    src/ints/int10.cpp \
    src/ints/int10_char.cpp \
    src/ints/int10_memory.cpp \
    src/ints/int10_misc.cpp \
    src/ints/int10_modes.cpp \
    src/ints/int10_vesa.cpp \
    src/ints/int10_pal.cpp \
    src/ints/int10_put_pixel.cpp \
    src/ints/int10_video_state.cpp \
    src/ints/int10_vptable.cpp \
    src/ints/bios.cpp \
    src/ints/bios_disk.cpp \
    src/ints/bios_keyboard.cpp \
    src/misc/cross.cpp \
    src/misc/messages.cpp \
    src/misc/programs.cpp \
    src/misc/setup.cpp \
    src/misc/support.cpp \
    src/shell/shell.cpp \
    src/shell/shell_batch.cpp \
    src/shell/shell_cmds.cpp \
    src/shell/shell_misc.cpp \
    src/hardware/serialport/directserial.cpp \
	src/hardware/serialport/libserial.cpp \
	src/hardware/serialport/serialdummy.cpp \
	src/hardware/serialport/serialport.cpp \
	src/hardware/serialport/softmodem.cpp \
	src/hardware/serialport/misc_util.cpp \
    src/hardware/serialport/nullmodem.cpp \
    src/dosbox.cpp \
    src/gui/render.cpp \
    src/gui/render_scalers.cpp \
    src/gui/midi.cpp \
    libretro/libretro.cpp \
    libretro/dos_gfx.cpp \
    libretro/mapper.cpp \
    libretro/mixer-retro.cpp

OBJECTS    = $(SOURCES:.cpp=.o) libco/libco.o
CPPFLAGS   += -D__LIBRETRO__ -iquote include $(fpic)
LDFLAGS    += -lm $(fpic)

ifeq ($(WANT_FLUIDSYNTH), 1)
    CPPFLAGS += -DC_FLUIDSYNTH
    LDFLAGS += -lfluidsynth
endif

all: $(TARGET)

$(TARGET): $(OBJECTS)
ifeq ($(STATIC_LINKING), 1)
	$(AR) rcs $@ $(OBJECTS)
else
	$(CXX) -o $@ $(OBJECTS) $(LDFLAGS)
endif

clean:
	rm -f $(OBJECTS) $(TARGET)

.PHONY: clean

